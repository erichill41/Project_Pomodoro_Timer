{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names/index\";\nimport useInterval from \"../utils/useInterval\";\nimport changeSessionType from \"./ChangeSessionType\";\nimport FocusTime from \"./FocusTime\";\nimport BreakTime from \"./BreakTime\";\nimport Countdown from \"./Countdown\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const sessionInitialState = {\n    active: false,\n    focusSession: true,\n    sessionTypeTitle: \"Focusing\",\n    focusTime: 1500,\n    breakDuration: 300,\n    currentDuration: 0,\n    timer: 1500\n  }; // setting initial state of session to the above initial state object\n\n  const [session, setSession] = useState({ ...sessionInitialState\n  });\n  useInterval(() => {\n    setSession({ ...session,\n      timer: session.timer - 1\n    });\n    if (session.timer < 1) changeSessionType(session, setSession);\n  }, isTimerRunning ? 100 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n\n    if (!session.active) {\n      setSession({ ...session,\n        active: true,\n        currentDuration: session.focusTime,\n        timer: session.focusTime\n      });\n    }\n  }\n\n  const stopButtonHandler = () => {\n    setIsTimerRunning(false);\n    setSession({ ...session,\n      active: false,\n      focusSession: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FocusTime, {\n    min: 300,\n    max: 3600,\n    label: \"Focus Duration: \",\n    session: session,\n    setSession: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreakTime, {\n    min: 60,\n    max: 900,\n    label: \"Break Duration: \",\n    session: session,\n    setSesstion: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classNames({\n      \"btn\": true,\n      \"btn-primary\": session.active,\n      \"btn-secondary\": !session.active\n    }),\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: session.active ? stopButtonHandler : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Countdown, {\n    session: session,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","changeSessionType","FocusTime","BreakTime","Countdown","Pomodoro","isTimerRunning","setIsTimerRunning","sessionInitialState","active","focusSession","sessionTypeTitle","focusTime","breakDuration","currentDuration","timer","session","setSession","playPause","prevState","stopButtonHandler","oi","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMU,mBAAmB,GAAG;AAC1BC,IAAAA,MAAM,EAAE,KADkB;AAE1BC,IAAAA,YAAY,EAAE,IAFY;AAG1BC,IAAAA,gBAAgB,EAAE,UAHQ;AAI1BC,IAAAA,SAAS,EAAE,IAJe;AAK1BC,IAAAA,aAAa,EAAE,GALW;AAM1BC,IAAAA,eAAe,EAAE,CANS;AAO1BC,IAAAA,KAAK,EAAE;AAPmB,GAA5B,CAJkB,CAclB;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAC,GAAGU;AAAJ,GAAD,CAAtC;AAEAR,EAAAA,WAAW,CAAC,MAAM;AAChBiB,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaD,MAAAA,KAAK,EAAEC,OAAO,CAACD,KAAR,GAAe;AAAnC,KAAD,CAAV;AACA,QAAIC,OAAO,CAACD,KAAR,GAAgB,CAApB,EAAwBd,iBAAiB,CAACe,OAAD,EAAUC,UAAV,CAAlB;AAEtB,GAJQ,EAKTX,cAAc,GAAG,GAAH,GAAS,IALd,CAAX;AAQA;AACF;AACA;;AACE,WAASY,SAAT,GAAqB;AACnBX,IAAAA,iBAAiB,CAAEY,SAAD,IAAe,CAACA,SAAjB,CAAjB;;AAEE,QAAI,CAACH,OAAO,CAACP,MAAb,EAAqB;AACnBQ,MAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETP,QAAAA,MAAM,EAAE,IAFC;AAGTK,QAAAA,eAAe,EAAEE,OAAO,CAACJ,SAHhB;AAITG,QAAAA,KAAK,EAAEC,OAAO,CAACJ;AAJN,OAAD,CAAV;AAMD;AACF;;AACH,QAAMQ,iBAAiB,GAAG,MAAM;AAC9Bb,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAU,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETP,MAAAA,MAAM,EAAE,KAFC;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAD,CAAV;AAKD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAE,GADP;AAEE,IAAA,GAAG,EAAE,IAFP;AAGE,IAAA,KAAK,EAAE,kBAHT;AAIE,IAAA,OAAO,EAAEM,OAJX;AAKE,IAAA,UAAU,EAAEC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAE,EADP;AAEE,IAAA,GAAG,EAAE,GAFP;AAGE,IAAA,KAAK,EAAE,kBAHT;AAIE,IAAA,OAAO,EAAED,OAJX;AAKE,IAAA,WAAW,EAAEC,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CADF,eAuBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEC,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAEnB,UAAU,CAAC;AACpBsB,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACf,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAsBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEP,UAAU,CAAC;AACpB,aAAO,IADa;AAEpB,qBAAeiB,OAAO,CAACP,MAFH;AAGpB,uBAAiB,CAACO,OAAO,CAACP;AAHN,KAAD,CAFvB;AAOE,mBAAY,MAPd;AAQE,IAAA,KAAK,EAAC,kBARR;AASE,IAAA,OAAO,EAAEO,OAAO,CAACP,MAAR,GAAiBW,iBAAjB,GAAqCE,SAThD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAtBF,CADF,CADF,CAvBF,eA+DE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,cAAc,EAAEV,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/DF,CADF;AAsED;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names/index\";\nimport useInterval from \"../utils/useInterval\";\n\nimport changeSessionType from \"./ChangeSessionType\";\nimport FocusTime from \"./FocusTime\";\nimport BreakTime from \"./BreakTime\";\nimport Countdown from \"./Countdown\";\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  \n  const sessionInitialState = {\n    active: false,\n    focusSession: true,\n    sessionTypeTitle: \"Focusing\",\n    focusTime: 1500,\n    breakDuration: 300,\n    currentDuration: 0,\n    timer: 1500,\n  }\n\n  // setting initial state of session to the above initial state object\n  const [session, setSession] = useState({...sessionInitialState});\n\n  useInterval(() => {\n    setSession({...session, timer: session.timer -1,});\n    if (session.timer < 1) (changeSessionType(session, setSession));  \n    \n    },\n    isTimerRunning ? 100 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n      \n      if (!session.active) {\n        setSession({\n          ...session,\n          active: true,\n          currentDuration: session.focusTime,\n          timer: session.focusTime,\n        });\n      }\n    }\n  const stopButtonHandler = () => {\n    setIsTimerRunning(false);\n    setSession({\n      ...session,\n      active: false,\n      focusSession: true,\n    });\n  }\n  \n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <FocusTime\n            min={300}\n            max={3600}\n            label={\"Focus Duration: \"}\n            session={session}\n            setSession={setSession}\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <BreakTime\n              min={60}\n              max={900}\n              label={\"Break Duration: \"}\n              session={session}\n              setSesstion={setSession}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className={classNames({\n                \"btn\": true,\n                \"btn-primary\": session.active,\n                \"btn-secondary\": !session.active,\n              })}\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={session.active ? stopButtonHandler : undefined}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Countdown\n        session={session}\n        isTimerRunning={isTimerRunning}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}