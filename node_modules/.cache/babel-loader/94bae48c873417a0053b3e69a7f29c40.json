{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names/index\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusTime from \"./FocusTime\";\nimport BreakTime from \"./BreakTime\";\nimport RemainingTime from \"./RemainingTime\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // creating intial session properties\n\n  const sessionInitialState = {\n    active: false,\n    focusSession: true,\n    sessionTypeTitle: \"Focusing\",\n    focusTime: 1500,\n    breakTime: 300,\n    currentTime: 0,\n    timer: 1500\n  }; // setting initial state of session to the above initial state object\n\n  const [session, setSession] = useState({ ...sessionInitialState\n  }); // using useInterval to play audio and change the session type with function\n\n  useInterval(() => {\n    setSession({ ...session,\n      timer: session.timer - 1\n    });\n\n    if (session.timer === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      changeSessionType(session, setSession);\n    }\n  }, isTimerRunning ? 1000 : null); // function to change the session type between focus and break\n\n  function changeSessionType(session, setSession) {\n    if (session.focusSession) {\n      setSession({ ...session,\n        focusSession: false,\n        sessionTypeVerb: \"Taking Break\",\n        currentTime: session.breakTime,\n        timer: session.breakTime\n      });\n    } else {\n      setSession({ ...session,\n        focusSession: true,\n        sessionTypeVerb: \"Focusing\",\n        currentTime: session.focusTime,\n        timer: session.focusTime\n      });\n    }\n  }\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n\n    if (!session.active) {\n      setSession({ ...session,\n        active: true,\n        currentTime: session.focusTime,\n        timer: session.focusTime\n      });\n    }\n  }\n\n  const stopButtonHandler = () => {\n    setIsTimerRunning(false);\n    setSession({ ...session,\n      active: false,\n      focusSession: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FocusTime, {\n    min: 300,\n    max: 3600,\n    label: \"Focus Duration: \",\n    session: session,\n    setSession: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreakTime, {\n    min: 60,\n    max: 900,\n    label: \"Break Duration: \",\n    session: session,\n    setSession: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: !session.active,\n    className: classNames({\n      \"btn\": true,\n      \"btn-primary\": session.active,\n      \"btn-secondary\": !session.active\n    }),\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: session.active ? stopButtonHandler : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(RemainingTime, {\n    session: session,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","FocusTime","BreakTime","RemainingTime","Pomodoro","isTimerRunning","setIsTimerRunning","sessionInitialState","active","focusSession","sessionTypeTitle","focusTime","breakTime","currentTime","timer","session","setSession","Audio","play","changeSessionType","sessionTypeVerb","playPause","prevState","stopButtonHandler","oi","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD,CAFkB,CAIlB;;AACA,QAAMS,mBAAmB,GAAG;AAC1BC,IAAAA,MAAM,EAAE,KADkB;AAE1BC,IAAAA,YAAY,EAAE,IAFY;AAG1BC,IAAAA,gBAAgB,EAAE,UAHQ;AAI1BC,IAAAA,SAAS,EAAE,IAJe;AAK1BC,IAAAA,SAAS,EAAE,GALe;AAM1BC,IAAAA,WAAW,EAAE,CANa;AAO1BC,IAAAA,KAAK,EAAE;AAPmB,GAA5B,CALkB,CAelB;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAC,GAAGS;AAAJ,GAAD,CAAtC,CAhBkB,CAkBlB;;AACAP,EAAAA,WAAW,CAAC,MAAM;AAChBgB,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaD,MAAAA,KAAK,EAAEC,OAAO,CAACD,KAAR,GAAe;AAAnC,KAAD,CAAV;;AACA,QAAIC,OAAO,CAACD,KAAR,KAAkB,CAAtB,EAAyB;AACvB,UAAIG,KAAJ,CAAU,8CAAV,EAA0DC,IAA1D;AACAC,MAAAA,iBAAiB,CAACJ,OAAD,EAAUC,UAAV,CAAjB;AAED;AAAC,GANO,EAOTX,cAAc,GAAG,IAAH,GAAU,IAPf,CAAX,CAnBkB,CA8BlB;;AACA,WAASc,iBAAT,CAA2BJ,OAA3B,EAAoCC,UAApC,EAAgD;AAC9C,QAAID,OAAO,CAACN,YAAZ,EAA0B;AACtBO,MAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEPN,QAAAA,YAAY,EAAE,KAFP;AAGPW,QAAAA,eAAe,EAAE,cAHV;AAIPP,QAAAA,WAAW,EAAEE,OAAO,CAACH,SAJd;AAKPE,QAAAA,KAAK,EAAEC,OAAO,CAACH;AALR,OAAD,CAAV;AAOH,KARD,MAQO;AACHI,MAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEPN,QAAAA,YAAY,EAAE,IAFP;AAGPW,QAAAA,eAAe,EAAE,UAHV;AAIPP,QAAAA,WAAW,EAAEE,OAAO,CAACJ,SAJd;AAKPG,QAAAA,KAAK,EAAEC,OAAO,CAACJ;AALR,OAAD,CAAV;AAOH;AACJ;AAIC;AACF;AACA;;;AACE,WAASU,SAAT,GAAqB;AACnBf,IAAAA,iBAAiB,CAAEgB,SAAD,IAAe,CAACA,SAAjB,CAAjB;;AAEE,QAAI,CAACP,OAAO,CAACP,MAAb,EAAqB;AACnBQ,MAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETP,QAAAA,MAAM,EAAE,IAFC;AAGTK,QAAAA,WAAW,EAAEE,OAAO,CAACJ,SAHZ;AAITG,QAAAA,KAAK,EAAEC,OAAO,CAACJ;AAJN,OAAD,CAAV;AAMD;AACF;;AACH,QAAMY,iBAAiB,GAAG,MAAM;AAC9BjB,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAU,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETP,MAAAA,MAAM,EAAE,KAFC;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAD,CAAV;AAKD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,mBAAY,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAE,GADP;AAEE,IAAA,GAAG,EAAE,IAFP;AAGE,IAAA,KAAK,EAAE,kBAHT;AAIE,IAAA,OAAO,EAAEM,OAJX;AAKE,IAAA,UAAU,EAAEC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,mBAAY,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAE,EADP;AAEE,IAAA,GAAG,EAAE,GAFP;AAGE,IAAA,KAAK,EAAE,kBAHT;AAIE,IAAA,OAAO,EAAED,OAJX;AAKE,IAAA,UAAU,EAAEC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CADF,eAuBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEK,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAEtB,UAAU,CAAC;AACpByB,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACnB,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAsBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE,CAACU,OAAO,CAACP,MAFrB;AAGE,IAAA,SAAS,EAAET,UAAU,CAAC;AACpB,aAAO,IADa;AAEpB,qBAAegB,OAAO,CAACP,MAFH;AAGpB,uBAAiB,CAACO,OAAO,CAACP;AAHN,KAAD,CAHvB;AAQE,mBAAY,MARd;AASE,IAAA,KAAK,EAAC,kBATR;AAUE,IAAA,OAAO,EAAEO,OAAO,CAACP,MAAR,GAAiBe,iBAAjB,GAAqCE,SAVhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAtBF,CADF,CADF,CAvBF,eAgEE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEV,OADX;AAEE,IAAA,cAAc,EAAEV,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhEF,CADF;AAuED;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names/index\";\nimport useInterval from \"../utils/useInterval\";\n\n\nimport FocusTime from \"./FocusTime\";\nimport BreakTime from \"./BreakTime\";\nimport RemainingTime from \"./RemainingTime\";\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  \n  // creating intial session properties\n  const sessionInitialState = {\n    active: false,\n    focusSession: true,\n    sessionTypeTitle: \"Focusing\",\n    focusTime: 1500,\n    breakTime: 300,\n    currentTime: 0,\n    timer: 1500,\n  }\n\n  // setting initial state of session to the above initial state object\n  const [session, setSession] = useState({...sessionInitialState});\n\n  // using useInterval to play audio and change the session type with function\n  useInterval(() => {\n    setSession({...session, timer: session.timer -1,});\n    if (session.timer === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      changeSessionType(session, setSession);  \n    \n    }},\n    isTimerRunning ? 1000 : null\n  \n  );\n\n  // function to change the session type between focus and break\n  function changeSessionType(session, setSession) {\n    if (session.focusSession) {\n        setSession({\n            ...session,\n            focusSession: false,\n            sessionTypeVerb: \"Taking Break\",\n            currentTime: session.breakTime,\n            timer: session.breakTime,\n        });\n    } else {\n        setSession({\n            ...session,\n            focusSession: true,\n            sessionTypeVerb: \"Focusing\",\n            currentTime: session.focusTime,\n            timer: session.focusTime,\n        });\n    }\n}\n\n\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n      \n      if (!session.active) {\n        setSession({\n          ...session,\n          active: true,\n          currentTime: session.focusTime,\n          timer: session.focusTime,\n        });\n      }\n    }\n  const stopButtonHandler = () => {\n    setIsTimerRunning(false);\n    setSession({\n      ...session,\n      active: false,\n      focusSession: true,\n    });\n  }\n  \n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\" data-testid=\"duration-focus\">\n          <FocusTime\n            min={300}\n            max={3600}\n            label={\"Focus Duration: \"}\n            session={session}\n            setSession={setSession}\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\" data-testid=\"duration-break\">\n            <BreakTime\n              min={60}\n              max={900}\n              label={\"Break Duration: \"}\n              session={session}\n              setSession={setSession}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* Implement stopping the current focus or break session. and disable the stop button when there is no active session\n                This is done with ternary operator in onClick function */}\n            <button\n              type=\"button\"\n              disabled={!session.active}\n              className={classNames({\n                \"btn\": true,\n                \"btn-primary\": session.active,\n                \"btn-secondary\": !session.active,\n              })}\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={session.active ? stopButtonHandler : undefined}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <RemainingTime\n        session={session}\n        isTimerRunning={isTimerRunning}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}